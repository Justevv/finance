version: "3.8"

services:
  database:
    image: postgres:17.5-alpine3.22
    container_name: manager_database
    environment:
      POSTGRES_DB: puplic
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "sa"]
    networks:
      - manager_network

  database_slave_1:
    image: postgres:17.5-alpine3.22
    container_name: manager_database_slave_1
    environment:
      POSTGRES_DB: puplic
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
    ports:
      - "15432:5432"
    volumes:
      - pg_data_slave_1:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "sa" ]
    networks:
      - manager_network

  database_slave_2:
    image: postgres:17.5-alpine3.22
    container_name: manager_database_slave_2
    environment:
      POSTGRES_DB: puplic
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
    ports:
      - "25432:5432"
    volumes:
      - pg_data_slave_2:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "sa"]
    networks:
      - manager_network

  backend:
    image: manager:1
    container_name: manager_backend
    environment:
      host: database
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - manager_network
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 512M

  redis:
    image: redis/redis-stack:7.2.0-v18
    container_name: manager_redis
    environment:
      - REDIS_ARGS="--requirepass rassWd"
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_period: 10s
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - manager_network

volumes:
  pg_data:
  pg_data_slave_1:
  pg_data_slave_2:

networks:
  manager_network:
    driver: bridge